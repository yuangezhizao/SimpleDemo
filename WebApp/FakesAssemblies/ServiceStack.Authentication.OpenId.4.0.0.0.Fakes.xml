<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ServiceStack.Authentication.OpenId.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.ShimGoogleOpenIdOAuthProvider">
            <summary>ServiceStack.Authentication.OpenId.GoogleOpenIdOAuthProvider 的填充码类型</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimGoogleOpenIdOAuthProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimGoogleOpenIdOAuthProvider.#ctor(ServiceStack.Authentication.OpenId.GoogleOpenIdOAuthProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimGoogleOpenIdOAuthProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimGoogleOpenIdOAuthProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimGoogleOpenIdOAuthProvider.Bind(ServiceStack.Auth.IAuthProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimGoogleOpenIdOAuthProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimGoogleOpenIdOAuthProvider.ConstructorIAppSettings">
            <summary>设置 GoogleOpenIdOAuthProvider.GoogleOpenIdOAuthProvider(IAppSettings appSettings) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimGoogleOpenIdOAuthProvider.StaticConstructor">
            <summary>设置 GoogleOpenIdOAuthProvider.GoogleOpenIdOAuthProvider() 的 填充码</summary>
        </member>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.ShimGoogleOpenIdOAuthProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.ShimMyOpenIdOAuthProvider">
            <summary>ServiceStack.Authentication.OpenId.MyOpenIdOAuthProvider 的填充码类型</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimMyOpenIdOAuthProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimMyOpenIdOAuthProvider.#ctor(ServiceStack.Authentication.OpenId.MyOpenIdOAuthProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimMyOpenIdOAuthProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimMyOpenIdOAuthProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimMyOpenIdOAuthProvider.Bind(ServiceStack.Auth.IAuthProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimMyOpenIdOAuthProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimMyOpenIdOAuthProvider.ConstructorIAppSettings">
            <summary>设置 MyOpenIdOAuthProvider.MyOpenIdOAuthProvider(IAppSettings appSettings) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimMyOpenIdOAuthProvider.StaticConstructor">
            <summary>设置 MyOpenIdOAuthProvider.MyOpenIdOAuthProvider() 的 填充码</summary>
        </member>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.ShimMyOpenIdOAuthProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdExtensions">
            <summary>ServiceStack.Authentication.OpenId.OpenIdExtensions 的填充码类型</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdExtensions.ToDictionaryClaimsResponse">
            <summary>设置 OpenIdExtensions.ToDictionary(ClaimsResponse response) 的 填充码</summary>
        </member>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider">
            <summary>ServiceStack.Authentication.OpenId.OpenIdOAuthProvider 的填充码类型</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.#ctor(ServiceStack.Authentication.OpenId.OpenIdOAuthProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.Bind(ServiceStack.Auth.IAuthProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.AddAttributeExchangeExtensionsIAuthenticationRequest">
            <summary>设置 OpenIdOAuthProvider.AddAttributeExchangeExtensions(IAuthenticationRequest auth) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.AuthenticateIServiceBaseIAuthSessionAuthenticate">
            <summary>设置 OpenIdOAuthProvider.Authenticate(IServiceBase authService, IAuthSession session, Authenticate request) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.ConstructorIAppSettingsStringString">
            <summary>设置 OpenIdOAuthProvider.OpenIdOAuthProvider(IAppSettings appSettings, String name, String realm) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.CreateAuthInfoIAuthenticationResponse">
            <summary>设置 OpenIdOAuthProvider.CreateAuthInfo(IAuthenticationResponse response) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.CreateClaimsRequestIRequest">
            <summary>设置 OpenIdOAuthProvider.CreateClaimsRequest(IRequest httpReq) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.CreateOpenIdRelyingPartyIOpenIdApplicationStore">
            <summary>设置 OpenIdOAuthProvider.CreateOpenIdRelyingParty(IOpenIdApplicationStore store) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.GetAttributeExIAuthenticationResponse">
            <summary>设置 OpenIdOAuthProvider.GetAttributeEx(IAuthenticationResponse response) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.IsAuthorizedIAuthSessionIAuthTokensAuthenticate">
            <summary>设置 OpenIdOAuthProvider.IsAuthorized(IAuthSession session, IAuthTokens tokens, Authenticate request) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.LoadUserAuthInfoAuthUserSessionIAuthTokensDictionaryOfStringString">
            <summary>设置 OpenIdOAuthProvider.LoadUserAuthInfo(AuthUserSession userSession, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.LoadUserOAuthProviderIAuthSessionIAuthTokens">
            <summary>设置 OpenIdOAuthProvider.LoadUserOAuthProvider(IAuthSession authSession, IAuthTokens tokens) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.OpenIdApplicationStoreGet">
            <summary>设置 OpenIdOAuthProvider.get_OpenIdApplicationStore() 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.OpenIdApplicationStoreSetIOpenIdApplicationStore">
            <summary>设置 OpenIdOAuthProvider.set_OpenIdApplicationStore(IOpenIdApplicationStore value) 的 填充码</summary>
        </member>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.AllInstances.AddAttributeExchangeExtensionsIAuthenticationRequest">
            <summary>设置 OpenIdOAuthProvider.AddAttributeExchangeExtensions(IAuthenticationRequest auth) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.AllInstances.AuthenticateIServiceBaseIAuthSessionAuthenticate">
            <summary>设置 OpenIdOAuthProvider.Authenticate(IServiceBase authService, IAuthSession session, Authenticate request) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.AllInstances.CreateAuthInfoIAuthenticationResponse">
            <summary>设置 OpenIdOAuthProvider.CreateAuthInfo(IAuthenticationResponse response) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.AllInstances.CreateClaimsRequestIRequest">
            <summary>设置 OpenIdOAuthProvider.CreateClaimsRequest(IRequest httpReq) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.AllInstances.CreateOpenIdRelyingPartyIOpenIdApplicationStore">
            <summary>设置 OpenIdOAuthProvider.CreateOpenIdRelyingParty(IOpenIdApplicationStore store) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.AllInstances.GetAttributeExIAuthenticationResponse">
            <summary>设置 OpenIdOAuthProvider.GetAttributeEx(IAuthenticationResponse response) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.AllInstances.IsAuthorizedIAuthSessionIAuthTokensAuthenticate">
            <summary>设置 OpenIdOAuthProvider.IsAuthorized(IAuthSession session, IAuthTokens tokens, Authenticate request) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.AllInstances.LoadUserAuthInfoAuthUserSessionIAuthTokensDictionaryOfStringString">
            <summary>设置 OpenIdOAuthProvider.LoadUserAuthInfo(AuthUserSession userSession, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimOpenIdOAuthProvider.AllInstances.LoadUserOAuthProviderIAuthSessionIAuthTokens">
            <summary>设置 OpenIdOAuthProvider.LoadUserOAuthProvider(IAuthSession authSession, IAuthTokens tokens) 的 填充码</summary>
        </member>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.ShimYahooOpenIdOAuthProvider">
            <summary>ServiceStack.Authentication.OpenId.YahooOpenIdOAuthProvider 的填充码类型</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimYahooOpenIdOAuthProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimYahooOpenIdOAuthProvider.#ctor(ServiceStack.Authentication.OpenId.YahooOpenIdOAuthProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimYahooOpenIdOAuthProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimYahooOpenIdOAuthProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.ShimYahooOpenIdOAuthProvider.Bind(ServiceStack.Auth.IAuthProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimYahooOpenIdOAuthProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimYahooOpenIdOAuthProvider.ConstructorIAppSettings">
            <summary>设置 YahooOpenIdOAuthProvider.YahooOpenIdOAuthProvider(IAppSettings appSettings) 的 填充码</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.ShimYahooOpenIdOAuthProvider.StaticConstructor">
            <summary>设置 YahooOpenIdOAuthProvider.YahooOpenIdOAuthProvider() 的 填充码</summary>
        </member>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.ShimYahooOpenIdOAuthProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider">
            <summary>ServiceStack.Authentication.OpenId.GoogleOpenIdOAuthProvider 的存根类型</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.#ctor(ServiceStack.Configuration.IAppSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.Authenticate(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession,ServiceStack.Authenticate)">
            <summary>设置 OpenIdOAuthProvider.Authenticate(IServiceBase authService, IAuthSession session, Authenticate request) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.AuthenticateIServiceBaseIAuthSessionAuthenticate">
            <summary>设置 OpenIdOAuthProvider.Authenticate(IServiceBase authService, IAuthSession session, Authenticate request) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.CreateAuthInfo(DotNetOpenAuth.OpenId.RelyingParty.IAuthenticationResponse)">
            <summary>设置 OpenIdOAuthProvider.CreateAuthInfo(IAuthenticationResponse response) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.CreateAuthInfoIAuthenticationResponse">
            <summary>设置 OpenIdOAuthProvider.CreateAuthInfo(IAuthenticationResponse response) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.CreateClaimsRequest(ServiceStack.Web.IRequest)">
            <summary>设置 OpenIdOAuthProvider.CreateClaimsRequest(IRequest httpReq) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.CreateClaimsRequestIRequest">
            <summary>设置 OpenIdOAuthProvider.CreateClaimsRequest(IRequest httpReq) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.CreateOpenIdRelyingParty(DotNetOpenAuth.OpenId.IOpenIdApplicationStore)">
            <summary>设置 OpenIdOAuthProvider.CreateOpenIdRelyingParty(IOpenIdApplicationStore store) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.CreateOpenIdRelyingPartyIOpenIdApplicationStore">
            <summary>设置 OpenIdOAuthProvider.CreateOpenIdRelyingParty(IOpenIdApplicationStore store) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.InitializeStub">
            <summary>初始化 type StubGoogleOpenIdOAuthProvider 的新实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.IsAuthorized(ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthTokens,ServiceStack.Authenticate)">
            <summary>设置 OpenIdOAuthProvider.IsAuthorized(IAuthSession session, IAuthTokens tokens, Authenticate request) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.IsAuthorizedIAuthSessionIAuthTokensAuthenticate">
            <summary>设置 OpenIdOAuthProvider.IsAuthorized(IAuthSession session, IAuthTokens tokens, Authenticate request) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.LoadUserAuthInfo(ServiceStack.AuthUserSession,ServiceStack.Auth.IAuthTokens,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>设置 OpenIdOAuthProvider.LoadUserAuthInfo(AuthUserSession userSession, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.LoadUserAuthInfoAuthUserSessionIAuthTokensDictionaryOfStringString">
            <summary>设置 OpenIdOAuthProvider.LoadUserAuthInfo(AuthUserSession userSession, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.LoadUserOAuthProvider(ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthTokens)">
            <summary>设置 OpenIdOAuthProvider.LoadUserOAuthProvider(IAuthSession authSession, IAuthTokens tokens) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.LoadUserOAuthProviderIAuthSessionIAuthTokens">
            <summary>设置 OpenIdOAuthProvider.LoadUserOAuthProvider(IAuthSession authSession, IAuthTokens tokens) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.Logout(ServiceStack.IServiceBase,ServiceStack.Authenticate)">
            <summary>设置 AuthProvider.Logout(IServiceBase service, Authenticate request) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.LogoutIServiceBaseAuthenticate">
            <summary>设置 AuthProvider.Logout(IServiceBase service, Authenticate request) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.OnAuthenticated(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthTokens,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>设置 AuthProvider.OnAuthenticated(IServiceBase authService, IAuthSession session, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.OnAuthenticatedIServiceBaseIAuthSessionIAuthTokensDictionaryOfStringString">
            <summary>设置 AuthProvider.OnAuthenticated(IServiceBase authService, IAuthSession session, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.OnFailedAuthentication(ServiceStack.Auth.IAuthSession,ServiceStack.Web.IRequest,ServiceStack.Web.IResponse)">
            <summary>设置 AuthProvider.OnFailedAuthentication(IAuthSession session, IRequest httpReq, IResponse httpRes) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.OnFailedAuthenticationIAuthSessionIRequestIResponse">
            <summary>设置 AuthProvider.OnFailedAuthentication(IAuthSession session, IRequest httpReq, IResponse httpRes) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.OnSaveUserAuth(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession)">
            <summary>设置 AuthProvider.OnSaveUserAuth(IServiceBase authService, IAuthSession session) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.OnSaveUserAuthIServiceBaseIAuthSession">
            <summary>设置 AuthProvider.OnSaveUserAuth(IServiceBase authService, IAuthSession session) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.SaveUserAuth(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthRepository,ServiceStack.Auth.IAuthTokens)">
            <summary>设置 AuthProvider.SaveUserAuth(IServiceBase authService, IAuthSession session, IAuthRepository authRepo, IAuthTokens tokens) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.SaveUserAuthIServiceBaseIAuthSessionIAuthRepositoryIAuthTokens">
            <summary>设置 AuthProvider.SaveUserAuth(IServiceBase authService, IAuthSession session, IAuthRepository authRepo, IAuthTokens tokens) 的 stub</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.StubGoogleOpenIdOAuthProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider">
            <summary>ServiceStack.Authentication.OpenId.MyOpenIdOAuthProvider 的存根类型</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.#ctor(ServiceStack.Configuration.IAppSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.Authenticate(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession,ServiceStack.Authenticate)">
            <summary>设置 OpenIdOAuthProvider.Authenticate(IServiceBase authService, IAuthSession session, Authenticate request) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.AuthenticateIServiceBaseIAuthSessionAuthenticate">
            <summary>设置 OpenIdOAuthProvider.Authenticate(IServiceBase authService, IAuthSession session, Authenticate request) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.CreateAuthInfo(DotNetOpenAuth.OpenId.RelyingParty.IAuthenticationResponse)">
            <summary>设置 OpenIdOAuthProvider.CreateAuthInfo(IAuthenticationResponse response) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.CreateAuthInfoIAuthenticationResponse">
            <summary>设置 OpenIdOAuthProvider.CreateAuthInfo(IAuthenticationResponse response) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.CreateClaimsRequest(ServiceStack.Web.IRequest)">
            <summary>设置 OpenIdOAuthProvider.CreateClaimsRequest(IRequest httpReq) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.CreateClaimsRequestIRequest">
            <summary>设置 OpenIdOAuthProvider.CreateClaimsRequest(IRequest httpReq) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.CreateOpenIdRelyingParty(DotNetOpenAuth.OpenId.IOpenIdApplicationStore)">
            <summary>设置 OpenIdOAuthProvider.CreateOpenIdRelyingParty(IOpenIdApplicationStore store) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.CreateOpenIdRelyingPartyIOpenIdApplicationStore">
            <summary>设置 OpenIdOAuthProvider.CreateOpenIdRelyingParty(IOpenIdApplicationStore store) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.InitializeStub">
            <summary>初始化 type StubMyOpenIdOAuthProvider 的新实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.IsAuthorized(ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthTokens,ServiceStack.Authenticate)">
            <summary>设置 OpenIdOAuthProvider.IsAuthorized(IAuthSession session, IAuthTokens tokens, Authenticate request) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.IsAuthorizedIAuthSessionIAuthTokensAuthenticate">
            <summary>设置 OpenIdOAuthProvider.IsAuthorized(IAuthSession session, IAuthTokens tokens, Authenticate request) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.LoadUserAuthInfo(ServiceStack.AuthUserSession,ServiceStack.Auth.IAuthTokens,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>设置 OpenIdOAuthProvider.LoadUserAuthInfo(AuthUserSession userSession, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.LoadUserAuthInfoAuthUserSessionIAuthTokensDictionaryOfStringString">
            <summary>设置 OpenIdOAuthProvider.LoadUserAuthInfo(AuthUserSession userSession, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.LoadUserOAuthProvider(ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthTokens)">
            <summary>设置 OpenIdOAuthProvider.LoadUserOAuthProvider(IAuthSession authSession, IAuthTokens tokens) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.LoadUserOAuthProviderIAuthSessionIAuthTokens">
            <summary>设置 OpenIdOAuthProvider.LoadUserOAuthProvider(IAuthSession authSession, IAuthTokens tokens) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.Logout(ServiceStack.IServiceBase,ServiceStack.Authenticate)">
            <summary>设置 AuthProvider.Logout(IServiceBase service, Authenticate request) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.LogoutIServiceBaseAuthenticate">
            <summary>设置 AuthProvider.Logout(IServiceBase service, Authenticate request) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.OnAuthenticated(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthTokens,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>设置 AuthProvider.OnAuthenticated(IServiceBase authService, IAuthSession session, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.OnAuthenticatedIServiceBaseIAuthSessionIAuthTokensDictionaryOfStringString">
            <summary>设置 AuthProvider.OnAuthenticated(IServiceBase authService, IAuthSession session, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.OnFailedAuthentication(ServiceStack.Auth.IAuthSession,ServiceStack.Web.IRequest,ServiceStack.Web.IResponse)">
            <summary>设置 AuthProvider.OnFailedAuthentication(IAuthSession session, IRequest httpReq, IResponse httpRes) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.OnFailedAuthenticationIAuthSessionIRequestIResponse">
            <summary>设置 AuthProvider.OnFailedAuthentication(IAuthSession session, IRequest httpReq, IResponse httpRes) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.OnSaveUserAuth(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession)">
            <summary>设置 AuthProvider.OnSaveUserAuth(IServiceBase authService, IAuthSession session) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.OnSaveUserAuthIServiceBaseIAuthSession">
            <summary>设置 AuthProvider.OnSaveUserAuth(IServiceBase authService, IAuthSession session) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.SaveUserAuth(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthRepository,ServiceStack.Auth.IAuthTokens)">
            <summary>设置 AuthProvider.SaveUserAuth(IServiceBase authService, IAuthSession session, IAuthRepository authRepo, IAuthTokens tokens) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.SaveUserAuthIServiceBaseIAuthSessionIAuthRepositoryIAuthTokens">
            <summary>设置 AuthProvider.SaveUserAuth(IServiceBase authService, IAuthSession session, IAuthRepository authRepo, IAuthTokens tokens) 的 stub</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.StubMyOpenIdOAuthProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider">
            <summary>ServiceStack.Authentication.OpenId.OpenIdOAuthProvider 的存根类型</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.#ctor(ServiceStack.Configuration.IAppSettings,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.Authenticate(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession,ServiceStack.Authenticate)">
            <summary>设置 OpenIdOAuthProvider.Authenticate(IServiceBase authService, IAuthSession session, Authenticate request) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.AuthenticateIServiceBaseIAuthSessionAuthenticate">
            <summary>设置 OpenIdOAuthProvider.Authenticate(IServiceBase authService, IAuthSession session, Authenticate request) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.CreateAuthInfo(DotNetOpenAuth.OpenId.RelyingParty.IAuthenticationResponse)">
            <summary>设置 OpenIdOAuthProvider.CreateAuthInfo(IAuthenticationResponse response) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.CreateAuthInfoIAuthenticationResponse">
            <summary>设置 OpenIdOAuthProvider.CreateAuthInfo(IAuthenticationResponse response) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.CreateClaimsRequest(ServiceStack.Web.IRequest)">
            <summary>设置 OpenIdOAuthProvider.CreateClaimsRequest(IRequest httpReq) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.CreateClaimsRequestIRequest">
            <summary>设置 OpenIdOAuthProvider.CreateClaimsRequest(IRequest httpReq) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.CreateOpenIdRelyingParty(DotNetOpenAuth.OpenId.IOpenIdApplicationStore)">
            <summary>设置 OpenIdOAuthProvider.CreateOpenIdRelyingParty(IOpenIdApplicationStore store) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.CreateOpenIdRelyingPartyIOpenIdApplicationStore">
            <summary>设置 OpenIdOAuthProvider.CreateOpenIdRelyingParty(IOpenIdApplicationStore store) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.InitializeStub">
            <summary>初始化 type StubOpenIdOAuthProvider 的新实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.IsAuthorized(ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthTokens,ServiceStack.Authenticate)">
            <summary>设置 OpenIdOAuthProvider.IsAuthorized(IAuthSession session, IAuthTokens tokens, Authenticate request) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.IsAuthorizedIAuthSessionIAuthTokensAuthenticate">
            <summary>设置 OpenIdOAuthProvider.IsAuthorized(IAuthSession session, IAuthTokens tokens, Authenticate request) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.LoadUserAuthInfo(ServiceStack.AuthUserSession,ServiceStack.Auth.IAuthTokens,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>设置 OpenIdOAuthProvider.LoadUserAuthInfo(AuthUserSession userSession, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.LoadUserAuthInfoAuthUserSessionIAuthTokensDictionaryOfStringString">
            <summary>设置 OpenIdOAuthProvider.LoadUserAuthInfo(AuthUserSession userSession, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.LoadUserOAuthProvider(ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthTokens)">
            <summary>设置 OpenIdOAuthProvider.LoadUserOAuthProvider(IAuthSession authSession, IAuthTokens tokens) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.LoadUserOAuthProviderIAuthSessionIAuthTokens">
            <summary>设置 OpenIdOAuthProvider.LoadUserOAuthProvider(IAuthSession authSession, IAuthTokens tokens) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.Logout(ServiceStack.IServiceBase,ServiceStack.Authenticate)">
            <summary>设置 AuthProvider.Logout(IServiceBase service, Authenticate request) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.LogoutIServiceBaseAuthenticate">
            <summary>设置 AuthProvider.Logout(IServiceBase service, Authenticate request) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.OnAuthenticated(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthTokens,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>设置 AuthProvider.OnAuthenticated(IServiceBase authService, IAuthSession session, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.OnAuthenticatedIServiceBaseIAuthSessionIAuthTokensDictionaryOfStringString">
            <summary>设置 AuthProvider.OnAuthenticated(IServiceBase authService, IAuthSession session, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.OnFailedAuthentication(ServiceStack.Auth.IAuthSession,ServiceStack.Web.IRequest,ServiceStack.Web.IResponse)">
            <summary>设置 AuthProvider.OnFailedAuthentication(IAuthSession session, IRequest httpReq, IResponse httpRes) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.OnFailedAuthenticationIAuthSessionIRequestIResponse">
            <summary>设置 AuthProvider.OnFailedAuthentication(IAuthSession session, IRequest httpReq, IResponse httpRes) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.OnSaveUserAuth(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession)">
            <summary>设置 AuthProvider.OnSaveUserAuth(IServiceBase authService, IAuthSession session) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.OnSaveUserAuthIServiceBaseIAuthSession">
            <summary>设置 AuthProvider.OnSaveUserAuth(IServiceBase authService, IAuthSession session) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.SaveUserAuth(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthRepository,ServiceStack.Auth.IAuthTokens)">
            <summary>设置 AuthProvider.SaveUserAuth(IServiceBase authService, IAuthSession session, IAuthRepository authRepo, IAuthTokens tokens) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.SaveUserAuthIServiceBaseIAuthSessionIAuthRepositoryIAuthTokens">
            <summary>设置 AuthProvider.SaveUserAuth(IServiceBase authService, IAuthSession session, IAuthRepository authRepo, IAuthTokens tokens) 的 stub</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.StubOpenIdOAuthProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider">
            <summary>ServiceStack.Authentication.OpenId.YahooOpenIdOAuthProvider 的存根类型</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.#ctor(ServiceStack.Configuration.IAppSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.Authenticate(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession,ServiceStack.Authenticate)">
            <summary>设置 OpenIdOAuthProvider.Authenticate(IServiceBase authService, IAuthSession session, Authenticate request) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.AuthenticateIServiceBaseIAuthSessionAuthenticate">
            <summary>设置 OpenIdOAuthProvider.Authenticate(IServiceBase authService, IAuthSession session, Authenticate request) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.CreateAuthInfo(DotNetOpenAuth.OpenId.RelyingParty.IAuthenticationResponse)">
            <summary>设置 OpenIdOAuthProvider.CreateAuthInfo(IAuthenticationResponse response) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.CreateAuthInfoIAuthenticationResponse">
            <summary>设置 OpenIdOAuthProvider.CreateAuthInfo(IAuthenticationResponse response) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.CreateClaimsRequest(ServiceStack.Web.IRequest)">
            <summary>设置 OpenIdOAuthProvider.CreateClaimsRequest(IRequest httpReq) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.CreateClaimsRequestIRequest">
            <summary>设置 OpenIdOAuthProvider.CreateClaimsRequest(IRequest httpReq) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.CreateOpenIdRelyingParty(DotNetOpenAuth.OpenId.IOpenIdApplicationStore)">
            <summary>设置 OpenIdOAuthProvider.CreateOpenIdRelyingParty(IOpenIdApplicationStore store) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.CreateOpenIdRelyingPartyIOpenIdApplicationStore">
            <summary>设置 OpenIdOAuthProvider.CreateOpenIdRelyingParty(IOpenIdApplicationStore store) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.InitializeStub">
            <summary>初始化 type StubYahooOpenIdOAuthProvider 的新实例</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.IsAuthorized(ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthTokens,ServiceStack.Authenticate)">
            <summary>设置 OpenIdOAuthProvider.IsAuthorized(IAuthSession session, IAuthTokens tokens, Authenticate request) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.IsAuthorizedIAuthSessionIAuthTokensAuthenticate">
            <summary>设置 OpenIdOAuthProvider.IsAuthorized(IAuthSession session, IAuthTokens tokens, Authenticate request) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.LoadUserAuthInfo(ServiceStack.AuthUserSession,ServiceStack.Auth.IAuthTokens,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>设置 OpenIdOAuthProvider.LoadUserAuthInfo(AuthUserSession userSession, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.LoadUserAuthInfoAuthUserSessionIAuthTokensDictionaryOfStringString">
            <summary>设置 OpenIdOAuthProvider.LoadUserAuthInfo(AuthUserSession userSession, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.LoadUserOAuthProvider(ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthTokens)">
            <summary>设置 OpenIdOAuthProvider.LoadUserOAuthProvider(IAuthSession authSession, IAuthTokens tokens) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.LoadUserOAuthProviderIAuthSessionIAuthTokens">
            <summary>设置 OpenIdOAuthProvider.LoadUserOAuthProvider(IAuthSession authSession, IAuthTokens tokens) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.Logout(ServiceStack.IServiceBase,ServiceStack.Authenticate)">
            <summary>设置 AuthProvider.Logout(IServiceBase service, Authenticate request) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.LogoutIServiceBaseAuthenticate">
            <summary>设置 AuthProvider.Logout(IServiceBase service, Authenticate request) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.OnAuthenticated(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthTokens,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>设置 AuthProvider.OnAuthenticated(IServiceBase authService, IAuthSession session, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.OnAuthenticatedIServiceBaseIAuthSessionIAuthTokensDictionaryOfStringString">
            <summary>设置 AuthProvider.OnAuthenticated(IServiceBase authService, IAuthSession session, IAuthTokens tokens, Dictionary`2&lt;String,String&gt; authInfo) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.OnFailedAuthentication(ServiceStack.Auth.IAuthSession,ServiceStack.Web.IRequest,ServiceStack.Web.IResponse)">
            <summary>设置 AuthProvider.OnFailedAuthentication(IAuthSession session, IRequest httpReq, IResponse httpRes) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.OnFailedAuthenticationIAuthSessionIRequestIResponse">
            <summary>设置 AuthProvider.OnFailedAuthentication(IAuthSession session, IRequest httpReq, IResponse httpRes) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.OnSaveUserAuth(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession)">
            <summary>设置 AuthProvider.OnSaveUserAuth(IServiceBase authService, IAuthSession session) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.OnSaveUserAuthIServiceBaseIAuthSession">
            <summary>设置 AuthProvider.OnSaveUserAuth(IServiceBase authService, IAuthSession session) 的 stub</summary>
        </member>
        <member name="M:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.SaveUserAuth(ServiceStack.IServiceBase,ServiceStack.Auth.IAuthSession,ServiceStack.Auth.IAuthRepository,ServiceStack.Auth.IAuthTokens)">
            <summary>设置 AuthProvider.SaveUserAuth(IServiceBase authService, IAuthSession session, IAuthRepository authRepo, IAuthTokens tokens) 的 存根</summary>
        </member>
        <member name="F:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.SaveUserAuthIServiceBaseIAuthSessionIAuthRepositoryIAuthTokens">
            <summary>设置 AuthProvider.SaveUserAuth(IServiceBase authService, IAuthSession session, IAuthRepository authRepo, IAuthTokens tokens) 的 stub</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ServiceStack.Authentication.OpenId.Fakes.StubYahooOpenIdOAuthProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
